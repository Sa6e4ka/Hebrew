from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, StateFilter,  or_f

from sqlalchemy.ext.asyncio import AsyncSession
from Database import orm_save_themed_word, orm_get_theme_list

from Auxiliaries import SaveThemed, button, paginator, Pagination, error_handler


# Save General Router
save_general_router = Router()


'''
–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ª–æ–≤–∞ –≤ –æ–±—â–∏–π —Å–ª–æ–≤–∞—Ä—å
'''
async def process_theme_selection(message_or_call, session: AsyncSession):
    themes = await orm_get_theme_list(session=session)
    if len(themes) == 0:
        text = "–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –Ω–∏ –æ–¥–Ω–æ–π —Ç–µ–º—ã –µ—â–µ –Ω–µ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ–±—â–∏–π —Å–ª–æ–≤–∞—Ä—å ü§î"
        reply_markup = button(["–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–û—Ç–º–µ–Ω–∞"])
        
        if isinstance(message_or_call, Message):
            await message_or_call.answer(text=text, reply_markup=reply_markup)
            return
        await message_or_call.message.edit_text(text=text, reply_markup=reply_markup)
        return
    
    KB = await paginator(page=0, themes=themes)
    text = "–í—ã–±–µ—Ä–∏ —Ç–µ–º—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—à—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ª–æ–≤–æ"
    
    if isinstance(message_or_call, Message):
        await message_or_call.answer(text=text, reply_markup=KB)
        return
    await message_or_call.message.edit_text(text=text, reply_markup=KB)


'''
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ª–æ–≤–∞ –ø–æ —Ç–µ–º–µ
'''
@save_general_router.message(Command("saveontheme"))
@error_handler
async def add_ban(message: Message, session: AsyncSession):
    await process_theme_selection(message, session)


'''
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ª–æ–≤–∞ –≤ –æ–±—â–∏–π —Å–ª–æ–≤–∞—Ä—å
'''
@save_general_router.callback_query(or_f(F.data == "–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞", F.data == "–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞ –ø–æ —Ç–µ–º–∞–º"))
async def add_ban_on_button(call: CallbackQuery, session: AsyncSession):
    await process_theme_selection(call, session)


'''
–ü–∞–≥–∏–Ω–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ —Å —Ç–µ–º–∞–º–∏
'''
@save_general_router.callback_query(Pagination.filter())
async def pagination_handler(call: CallbackQuery, callback_data: Pagination, session: AsyncSession):
    page = callback_data.page  # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ callback data
    themes = await orm_get_theme_list(session=session)  

    await call.message.edit_reply_markup(reply_markup=await paginator(page=page, themes=themes))  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–æ–∫ "–≤–ø–µ—Ä–µ–¥" –∏–ª–∏ "–Ω–∞–∑–∞–¥"


'''
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ç–µ–º–æ–π
'''
@save_general_router.callback_query(or_f(F.data.startswith("theme"), F.data == "–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ —Ç–æ–π –∂–µ —Ç–µ–º–µ", F.data == "–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ –ø–æ —ç—Ç–æ–π —Ç–µ–º–µ"))
async def callback_on_themes(call: CallbackQuery, state: FSMContext):
    await state.set_state(SaveThemed.second)

    if F.data.startswith("theme"):
        theme = call.data.split("_")[-1]
        await state.update_data(theme = theme)
    else:    
        state_data = await state.get_data()
        theme = state_data["theme"]
        await state.update_data(theme=theme)

    await call.answer()
    await call.message.edit_text(text="–í–≤–µ–¥–∏ —Å–ª–æ–≤–æ –Ω–∞ <b>–ò–≤—Ä–∏—Ç–µ</b>")


'''
–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ª–æ–≤–∞ –Ω–∞ –ò–≤—Ä–∏—Ç–µ –≤ —Å–ª–æ–≤–∞—Ä–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π
'''
@save_general_router.message(F.text, StateFilter(SaveThemed.second))
async def save_on_theme_third(message : Message, state: FSMContext):
    await state.update_data(
        word = message.text.lower()
    )

    await message.answer(
        text="–í–≤–µ–¥–∏ –µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥ <b>–Ω–∞ –†—É—Å—Å–∫–∏–π</b>"
    )

    await state.set_state(SaveThemed.third)


'''
–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
'''
@save_general_router.message(F.text, StateFilter(SaveThemed.third))
async def save_on_theme_fourth(message : Message, state: FSMContext):
    await state.update_data(translation = message.text.lower())
    await message.answer(text="–í–≤–µ–¥–∏ –µ–≥–æ <b>—Ç—Ä–∞–Ω—Å–∫—Ä–∏–±—Ü–∏—é</b> –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º –≤–∏–¥–µ.\n\n–ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ–±—ã –±—ã–ª–æ –ø–æ–Ω—è—Ç–Ω–æ –∫–∞–∫ –æ–Ω–æ —á–∏—Ç–∞–µ—Ç—Å—è –∏ –±—ã–ª–æ —É–¥–∞—Ä–µ–Ω–∏–µ–º")
    await state.set_state(SaveThemed.fourth)


'''
–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –≤ —Å–ª–æ–≤–∞—Ä–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞ –≤ –æ–±—â–µ–π —Ç–∞–±–ª–∏—Ü—ã
'''
@save_general_router.message(F.text, StateFilter(SaveThemed.fourth))
async def save_on_theme_fifth(message : Message, state: FSMContext, session : AsyncSession):
    await state.update_data(transcription = message.text.lower())
    state_data = await state.get_data()
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞
    await orm_save_themed_word(session=session, data=state_data)

    await message.answer(text="–°–ª–æ–≤–æ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!\n\n–¢–µ–ø–µ—å —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –æ—Ç—Ä–∞–±–æ—Ç–∫–µ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –µ—à–µ —Å–ª–æ–≤–∞ ", reply_markup=button(["–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ —Ç–æ–π –∂–µ —Ç–µ–º–µ", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]))

