'''
–£–¥–∞–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä–µ–π
'''
from aiogram import F, Router
from aiogram.filters import Command, StateFilter, or_f
from aiogram.fsm.context import FSMContext
from aiogram.types import  Message, CallbackQuery

from sqlalchemy.ext.asyncio import AsyncSession
from Database import orm_delete_word, orm_delete_themed

from Auxiliaries import Delete, Delete2, button, error_handler


# Delete Router
delete_router = Router()


'''
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞
–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞—Ç—å —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞ –∏–∑ –Ω–µ–≥–æ
'''
@delete_router.message(StateFilter(None), Command("delete"))
@error_handler
async def choose_dict_to_delete(message : Message, state: FSMContext):
    await state.clear()
    murkup = button(["–ò–∑ —Å–≤–æ–µ–≥–æ —Å–ª–æ–≤–∞—Ä—è", "–ò–∑ –æ–±—â–µ–≥–æ —Å–ª–æ–≤–∞—Ä—è", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"])
    await message.answer(text="–í—ã–±–µ—Ä–∏ —Å–ª–æ–≤–∞—Ä—å, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ", reply_markup=murkup)


'''
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ —Å –≤—ã–±–æ—Ä–æ–º —Å–ª–æ–≤–∞—Ä—è
'''
@delete_router.callback_query(or_f(F.data == "–ò–∑ —Å–≤–æ–µ–≥–æ —Å–ª–æ–≤–∞—Ä—è", F.data == "–£–¥–∞–ª–∏—Ç—å –µ—â–µ —Å–ª–æ–≤–æ", F.data == "–ò–∑ –æ–±—â–µ–≥–æ —Å–ª–æ–≤–∞—Ä—è", F.data == "–£–¥–∞–ª–∏—Ç—å –µ—â–µ", F.data == "–£–¥–∞–ª–∏—Ç—å –Ω—É–∂–Ω–æ–µ —Å–ª–æ–≤–æ", F.data == "–£–¥–∞–ª–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ")) 
@error_handler
async def choose_on_button(call: CallbackQuery, state: FSMContext):
    await call.answer()
    if call.data in ["–ò–∑ —Å–≤–æ–µ–≥–æ —Å–ª–æ–≤–∞—Ä—è", "–£–¥–∞–ª–∏—Ç—å –µ—â–µ —Å–ª–æ–≤–æ", "–£–¥–∞–ª–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ"]: 
        await call.message.edit_text(text="–í–≤–µ–¥–∏ (–Ω–∞ –ò–≤—Ä–∏—Ç–µ) —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å <b>—É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–≤–æ–µ–≥–æ —Å–ª–æ–≤–∞—Ä—è</b>:")   
        await state.set_state(Delete.Delete)
        return
    
    await call.message.edit_text("–í–≤–µ–¥–∏ (–Ω–∞ –ò–≤—Ä–∏—Ç–µ) —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å <b>—É–¥–∞–ª–∏—Ç—å –∏–∑ –æ–±—â–µ–≥–æ —Å–ª–æ–≤–∞—Ä—è</b>:")
    await state.set_state(Delete2.Delete2)


'''
–£–¥–∞–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞ –∏–∑ –ª–∏—á–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è
'''
@delete_router.message(StateFilter(Delete.Delete), F.text)
@error_handler
async def delete_personal_word(message: Message, state: FSMContext, session: AsyncSession):
        result = await orm_delete_word(word = message.text.lower(), chat_id = message.chat.id, session=session)

        if result is not None:
            await message.answer(result, reply_markup=button(["–£–¥–∞–ª–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]))
            await state.clear()
            return
        
        await message.answer('–°–ª–æ–≤–æ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!', reply_markup=button(["–£–¥–∞–ª–∏—Ç—å –µ—â–µ —Å–ª–æ–≤–æ", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]))
        await state.clear()
   

'''
–£–¥–∞–ª–µ–Ω–∏–µ —Å–ª–≤–∞ –∏–∑ –æ–±—â–µ–≥–æ —Å–ª–æ–≤–∞—Ä—è
'''
@delete_router.message(StateFilter(Delete2.Delete2))
async def delte_global_word(message: Message, state: FSMContext, session: AsyncSession):
    markup=button(["–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é","–£–¥–∞–ª–∏—Ç—å –µ—â–µ" ])        
    try:
        await orm_delete_themed(session=session, word = message.text.lower())
        await message.answer(text="–°–ª–æ–≤–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!", reply_markup=markup)
    except AttributeError:
        await message.answer(text="–≠—Ç–æ–≥–æ —Å–ª–æ–≤–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ –µ—â–µ –Ω–µ—Ç üò≠",reply_markup=markup)
    await state.clear()

